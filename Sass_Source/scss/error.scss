/*
*************** 
Education Sass üë®üèΩ‚Äç‚öñÔ∏è with SourceCode üòâ 
developer : Ahmad hadizadeh website 
Https: //Asancode.com
*************** 
*/
/* 
When writing mixins and functions that take arguments,
you usually want to ensure that those arguments have the types and formats your API expects. If they aren‚Äôt,
the user needs to be notified and your mixin/function needs to stop running. Sass makes this easy with the @error rule,
which is written @error <expression>. It prints the value of the expression (usually a string) along with a stack trace indicating how the current mixin or function was called. Once the error is printed,
Sass stops compiling the stylesheet and tells whatever system is running it that an error occurred.
*/

@mixin test($color) {
    $msg1: "value is Gooooooooood";
    $msg2: "Value Not Correcttttt";
    $default: blue;

    @if($default==$color) {
        @error "input : #{$msg1}";
    }

    @else {
        @error "input : #{$msg2}"
    }
}

h3 {
    @include test(red);
}

@mixin border-width($width, $color) {
    border: $width solid $color;
    $msg1: "value is Gooooooooood";
    $msg2: "Value is Very Big";

    @if($width>6px) {
        @error "yor input:#{$msg2}";
    }

    @else {
        @warn "yor input:#{$msg2}"
    }
}

h3 {
    @include border-width(10px, red);
}


// Or 




@mixin reflexive-position($property, $value) {
    @if $property !=left and $property !=right {
        @error "Property #{$property} must be either left or right.";
    }

    $left-value: if($property ==right, initial, $value);
    $right-value: if($property ==right, $value, initial);

    left: $left-value;
    right: $right-value;

    [dir=rtl] & {
        left: $right-value;
        right: $left-value;
    }
}

.sidebar {
    @include reflexive-position(top, 12px);
    //       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // Error: Property top must be either left or right.
}

/* 

Error: "Property top must be either left or right."
‚ï∑ 3 ‚îÇ @error "Property #{$property} must be either left or right.";
‚îÇ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ‚ïµ example.scss 3:5 reflexive-position() example.scss 19:3 root stylesheet




*/